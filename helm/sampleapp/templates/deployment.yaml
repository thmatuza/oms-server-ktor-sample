apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "sampleapp.fullname" . }}
  labels:
    app: {{ template "sampleapp.name" . }}
    chart: {{ template "sampleapp.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "sampleapp.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
{{- with .Values.podAnnotations }}
      annotations:
{{ toYaml . | indent 8 }}
{{- end }}
      labels:
        app: {{ template "sampleapp.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: envoy
          image: "{{ .Values.envoy.image.repository }}:{{ .Values.envoy.image.tag }}"
          imagePullPolicy: {{ .Values.envoy.image.pullPolicy }}
          command:
            - "/usr/local/bin/envoy"
          args:
            - "--config-path /etc/envoy/envoy.yaml"
            - "--service-cluster ingress"
          ports:
            - name: http-public
              containerPort: {{ .Values.envoy.containerPort.http.public }}
            - name: admin
              containerPort: {{ .Values.envoy.containerPort.admin }}
          volumeMounts:
            - name: {{ template "sampleapp.fullname" . }}-envoy
              mountPath: /etc/envoy
        - name: {{ .Chart.Name }}
          image: "{{ .Values.sampleapp.image.repository }}:{{ .Values.sampleapp.image.tag }}"
          imagePullPolicy: {{ .Values.sampleapp.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.sampleapp.containerPort.http.public }}
              protocol: TCP
          env:
            {{- range $key, $val := .Values.sampleapp.env }}
            - name: {{ $key }}
              value: {{ $val | quote }}
            {{- end }}
          {{- if gt .Values.sampleapp.initialDelaySeconds 0.0 }}
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: {{ .Values.sampleapp.initialDelaySeconds }}
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: {{ .Values.sampleapp.initialDelaySeconds }}
          {{- end }}
          resources:
{{ toYaml .Values.sampleapp.resources | indent 12 }}
      volumes:
        - name: {{ template "sampleapp.fullname" . }}-envoy
          configMap:
            name: {{ template "sampleapp.fullname" . }}-envoy
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}